{"ast":null,"code":"var _jsxFileName = \"/Users/luislopez/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Countdown.js\";\nimport React from 'react';\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function Countdown({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }\n  }, session.label, \" for\", \" \", minutesToDuration(session.label === \"On Break\" ? breakDuration : focusDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, secondsToDuration(session.timeRemaining), \" remaining\")) : null));\n}","map":{"version":3,"sources":["/Users/luislopez/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Countdown.js"],"names":["React","minutesToDuration","secondsToDuration","Countdown","session","focusDuration","breakDuration","label","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAnB,EAA8D;AACzE,sBACI,uDAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,gBACN;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACG,KADX,UACsB,GADtB,EAEGN,iBAAiB,CAChBG,OAAO,CAACG,KAAR,KAAkB,UAAlB,GAA+BD,aAA/B,GAA+CD,aAD/B,CAFpB,EAIK,GAJL,YAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,iBAAiB,CAACE,OAAO,CAACI,aAAT,CADpB,eAVF,CADM,GAeJ,IAhBN,CAFA,CADJ;AAuBH","sourcesContent":["import React from 'react';\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nexport default function Countdown({ session, focusDuration, breakDuration }) {\n    return (\n        <>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          {session ? (\n            <div className=\"col\">\n              {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n              <h2 data-testid=\"session-title\">\n                {session.label} for{\" \"}\n                {minutesToDuration(\n                  session.label === \"On Break\" ? breakDuration : focusDuration\n                )}{\" \"}\n                minutes\n              </h2>\n              {/* TODO: Update message below correctly format the time remaining in the current session */}\n              <p className=\"lead\" data-testid=\"session-sub-title\">\n                {secondsToDuration(session.timeRemaining)} remaining\n              </p>\n            </div>\n          ) : null}\n        </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}